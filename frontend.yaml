apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: conexp-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: conexp-frontend
  template:
    metadata:
      labels:
        app: conexp-frontend
    spec:
      containers:
      - name: frontend
        image: __IMAGE__
        ports:
        - containerPort: 80  
        imagePullPolicy: Always
      imagePullSecrets:
      - name: regcred
      nodeSelector: 
        "beta.kubernetes.io/os": linux
---
apiVersion: v1
kind: Service
metadata:
  name: conexp-frontend-svc
  labels:
    app: conexp-frontend
spec:
  selector:
    app: conexp-frontend
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: frontend-ingress-rules
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    cert-manager.io/cluster-issuer: letsencrypt   
    external-dns.alpha.kubernetes.io/hostname: conexp.aks.srinipadala.xyz
    external-dns.alpha.kubernetes.io/target: aks.srinipadala.xyz
spec:
  tls:
  - hosts:
    - conexp.aks.srinipadala.xyz
    secretName: tls-conexp-frontend-secret
  rules:
  - host: conexp.aks.srinipadala.xyz
    http:
      paths:
      - backend:
          serviceName: conexp-frontend-svc
          servicePort: 80
        path: /(.*)